{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "awscdk": {
        "id": "awscdk",
        "path": "awscdk",
        "children": {
          "HostedZone": {
            "id": "HostedZone",
            "path": "awscdk/HostedZone",
            "children": {
              "hosted_zone": {
                "id": "hosted_zone",
                "path": "awscdk/HostedZone/hosted_zone"
              }
            }
          },
          "SiteCert": {
            "id": "SiteCert",
            "path": "awscdk/SiteCert",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "awscdk/SiteCert/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CertificateManager::Certificate",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "jamescaffey.com",
                    "domainValidationOptions": [
                      {
                        "domainName": "jamescaffey.com",
                        "validationDomain": "jamescaffey.com"
                      },
                      {
                        "domainName": "*.jamescaffey.com",
                        "validationDomain": "jamescaffey.com"
                      }
                    ],
                    "subjectAlternativeNames": [
                      "*.jamescaffey.com"
                    ],
                    "validationMethod": "DNS"
                  }
                }
              }
            }
          },
          "StaticSite": {
            "id": "StaticSite",
            "path": "awscdk/StaticSite",
            "children": {
              "StaticSiteBucket": {
                "id": "StaticSiteBucket",
                "path": "awscdk/StaticSite/StaticSiteBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "awscdk/StaticSite/StaticSiteBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "accessControl": "PublicRead",
                        "bucketName": "jamescaffey.com"
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "awscdk/StaticSite/StaticSiteBucket/Notifications"
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "awscdk/StaticSite/StaticSiteBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "awscdk/StaticSite/StaticSiteBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "StaticSiteStaticSiteBucket442CE34F"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Effect": "Allow",
                                  "Principal": "*",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "StaticSiteStaticSiteBucket442CE34F",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "CloudFrontDistribution": {
                "id": "CloudFrontDistribution",
                "path": "awscdk/StaticSite/CloudFrontDistribution",
                "children": {
                  "AliasConfigurationCert": {
                    "id": "AliasConfigurationCert",
                    "path": "awscdk/StaticSite/CloudFrontDistribution/AliasConfigurationCert"
                  },
                  "CFDistribution": {
                    "id": "CFDistribution",
                    "path": "awscdk/StaticSite/CloudFrontDistribution/CFDistribution",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                      "aws:cdk:cloudformation:props": {
                        "distributionConfig": {
                          "enabled": true,
                          "defaultRootObject": "index.html",
                          "httpVersion": "http2",
                          "priceClass": "PriceClass_100",
                          "ipv6Enabled": true,
                          "customErrorResponses": [
                            {
                              "errorCode": 403,
                              "errorCachingMinTtl": 0,
                              "responseCode": 200,
                              "responsePagePath": "/index.html"
                            },
                            {
                              "errorCode": 404,
                              "errorCachingMinTtl": 0,
                              "responseCode": 200,
                              "responsePagePath": "/index.html"
                            }
                          ],
                          "origins": [
                            {
                              "id": "origin1",
                              "domainName": {
                                "Fn::GetAtt": [
                                  "StaticSiteStaticSiteBucket442CE34F",
                                  "RegionalDomainName"
                                ]
                              },
                              "s3OriginConfig": {}
                            }
                          ],
                          "defaultCacheBehavior": {
                            "allowedMethods": [
                              "GET",
                              "HEAD"
                            ],
                            "cachedMethods": [
                              "GET",
                              "HEAD"
                            ],
                            "compress": true,
                            "forwardedValues": {
                              "queryString": false,
                              "cookies": {
                                "forward": "none"
                              }
                            },
                            "targetOriginId": "origin1",
                            "viewerProtocolPolicy": "redirect-to-https"
                          },
                          "aliases": [
                            "jamescaffey.com",
                            "*.jamescaffey.com"
                          ],
                          "viewerCertificate": {
                            "acmCertificateArn": {
                              "Ref": "SiteCert6025247C"
                            },
                            "sslSupportMethod": "sni-only"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "AliasRecord": {
                "id": "AliasRecord",
                "path": "awscdk/StaticSite/AliasRecord",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "awscdk/StaticSite/AliasRecord/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                      "aws:cdk:cloudformation:props": {
                        "name": "*.jamescaffey.com.",
                        "type": "A",
                        "aliasTarget": {
                          "hostedZoneId": "Z2FDTNDATAQYW2",
                          "dnsName": {
                            "Fn::GetAtt": [
                              "StaticSiteCloudFrontDistributionCFDistributionA70E78CD",
                              "DomainName"
                            ]
                          }
                        },
                        "hostedZoneId": "Z1EJVU8DMBV0XG"
                      }
                    }
                  }
                }
              },
              "AliasRecord1": {
                "id": "AliasRecord1",
                "path": "awscdk/StaticSite/AliasRecord1",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "awscdk/StaticSite/AliasRecord1/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                      "aws:cdk:cloudformation:props": {
                        "name": "jamescaffey.com.",
                        "type": "A",
                        "aliasTarget": {
                          "hostedZoneId": "Z2FDTNDATAQYW2",
                          "dnsName": {
                            "Fn::GetAtt": [
                              "StaticSiteCloudFrontDistributionCFDistributionA70E78CD",
                              "DomainName"
                            ]
                          }
                        },
                        "hostedZoneId": "Z1EJVU8DMBV0XG"
                      }
                    }
                  }
                }
              }
            }
          },
          "ElasticContainerRepo": {
            "id": "ElasticContainerRepo",
            "path": "awscdk/ElasticContainerRepo",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "awscdk/ElasticContainerRepo/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "jamescaffey.com/backend"
                  }
                }
              }
            }
          },
          "Vpc": {
            "id": "Vpc",
            "path": "awscdk/Vpc",
            "children": {
              "Vpc": {
                "id": "Vpc",
                "path": "awscdk/Vpc/Vpc",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "awscdk/Vpc/Vpc/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/16",
                        "enableDnsHostnames": true,
                        "enableDnsSupport": true,
                        "instanceTenancy": "default",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "awscdk/Vpc/Vpc"
                          }
                        ]
                      }
                    }
                  },
                  "PublicSubnet1": {
                    "id": "PublicSubnet1",
                    "path": "awscdk/Vpc/Vpc/PublicSubnet1",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet1/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.0.0/24",
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/PublicSubnet1"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Public"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet1/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet1/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/PublicSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet1/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "VpcPublicSubnet1RouteTable431DD755"
                            },
                            "subnetId": {
                              "Ref": "VpcPublicSubnet1Subnet8E8DEDC0"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet1/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "VpcPublicSubnet1RouteTable431DD755"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "VpcIGW488B0FEB"
                            }
                          }
                        }
                      }
                    }
                  },
                  "PublicSubnet2": {
                    "id": "PublicSubnet2",
                    "path": "awscdk/Vpc/Vpc/PublicSubnet2",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet2/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.1.0/24",
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/PublicSubnet2"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Public"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet2/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet2/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/PublicSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet2/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "VpcPublicSubnet2RouteTable77FB35FC"
                            },
                            "subnetId": {
                              "Ref": "VpcPublicSubnet2SubnetA811849C"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "awscdk/Vpc/Vpc/PublicSubnet2/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "VpcPublicSubnet2RouteTable77FB35FC"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "VpcIGW488B0FEB"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IsolatedSubnet1": {
                    "id": "IsolatedSubnet1",
                    "path": "awscdk/Vpc/Vpc/IsolatedSubnet1",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet1/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.2.0/24",
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": false,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/IsolatedSubnet1"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Isolated"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Isolated"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet1/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet1/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/IsolatedSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet1/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "VpcIsolatedSubnet1RouteTableF057227C"
                            },
                            "subnetId": {
                              "Ref": "VpcIsolatedSubnet1SubnetDC3C6AF8"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IsolatedSubnet2": {
                    "id": "IsolatedSubnet2",
                    "path": "awscdk/Vpc/Vpc/IsolatedSubnet2",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet2/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.3.0/24",
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": false,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/IsolatedSubnet2"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Isolated"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Isolated"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet2/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet2/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "awscdk/Vpc/Vpc/IsolatedSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "awscdk/Vpc/Vpc/IsolatedSubnet2/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "VpcIsolatedSubnet2RouteTableBAB510EF"
                            },
                            "subnetId": {
                              "Ref": "VpcIsolatedSubnet2SubnetB479B99C"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IGW": {
                    "id": "IGW",
                    "path": "awscdk/Vpc/Vpc/IGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "awscdk/Vpc/Vpc"
                          }
                        ]
                      }
                    }
                  },
                  "VPCGW": {
                    "id": "VPCGW",
                    "path": "awscdk/Vpc/Vpc/VPCGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VpcC3027511"
                        },
                        "internetGatewayId": {
                          "Ref": "VpcIGW488B0FEB"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "ApplicationLoadBalancer": {
            "id": "ApplicationLoadBalancer",
            "path": "awscdk/ApplicationLoadBalancer",
            "children": {
              "ALB": {
                "id": "ALB",
                "path": "awscdk/ApplicationLoadBalancer/ALB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "awscdk/ApplicationLoadBalancer/ALB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "scheme": "internet-facing",
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "ApplicationLoadBalancerALBSecurityGroup0D676F12",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnets": [
                          {
                            "Ref": "VpcPublicSubnet1Subnet8E8DEDC0"
                          },
                          {
                            "Ref": "VpcPublicSubnet2SubnetA811849C"
                          }
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "awscdk/ApplicationLoadBalancer/ALB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "awscdk/ApplicationLoadBalancer/ALB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB awscdkApplicationLoadBalancerALB81FD6B77",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "255.255.255.255/32",
                                "description": "Disallow all traffic",
                                "ipProtocol": "icmp",
                                "fromPort": 252,
                                "toPort": 86
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 80,
                                "toPort": 80,
                                "description": "Internet access ALB 80"
                              },
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": "Internet access ALB 443"
                              }
                            ],
                            "vpcId": {
                              "Ref": "VpcC3027511"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "RedirectListener": {
                "id": "RedirectListener",
                "path": "awscdk/ApplicationLoadBalancer/RedirectListener",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                  "aws:cdk:cloudformation:props": {
                    "defaultActions": [
                      {
                        "type": "redirect",
                        "redirectConfig": {
                          "host": "#{host}",
                          "path": "/#{path}",
                          "port": "443",
                          "protocol": "HTTPS",
                          "query": "#{query}",
                          "statusCode": "HTTP_301"
                        }
                      }
                    ],
                    "loadBalancerArn": {
                      "Ref": "ApplicationLoadBalancerALBE88818A8"
                    },
                    "port": 80,
                    "protocol": "HTTP"
                  }
                }
              },
              "DefaultTargetGroup": {
                "id": "DefaultTargetGroup",
                "path": "awscdk/ApplicationLoadBalancer/DefaultTargetGroup",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                  "aws:cdk:cloudformation:props": {
                    "port": 80,
                    "protocol": "HTTP",
                    "vpcId": {
                      "Ref": "VpcC3027511"
                    }
                  }
                }
              },
              "HttpsListener": {
                "id": "HttpsListener",
                "path": "awscdk/ApplicationLoadBalancer/HttpsListener",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                  "aws:cdk:cloudformation:props": {
                    "defaultActions": [
                      {
                        "targetGroupArn": {
                          "Fn::GetAtt": [
                            "ApplicationLoadBalancerDefaultTargetGroupC3F373E8",
                            "Arn"
                          ]
                        },
                        "type": "forward"
                      }
                    ],
                    "loadBalancerArn": {
                      "Ref": "ApplicationLoadBalancerALBE88818A8"
                    },
                    "port": 443,
                    "protocol": "HTTPS",
                    "certificates": [
                      {
                        "certificateArn": {
                          "Ref": "SiteCert6025247C"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}