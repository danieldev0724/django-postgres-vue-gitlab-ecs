{
  "Resources": {
    "SiteCert6025247C": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": "jamescaffey.com",
        "DomainValidationOptions": [
          {
            "DomainName": "jamescaffey.com",
            "ValidationDomain": "jamescaffey.com"
          },
          {
            "DomainName": "*.jamescaffey.com",
            "ValidationDomain": "jamescaffey.com"
          }
        ],
        "SubjectAlternativeNames": [
          "*.jamescaffey.com"
        ],
        "ValidationMethod": "DNS"
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/SiteCert/Resource"
      }
    },
    "StaticSiteStaticSiteBucket442CE34F": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": "jamescaffey.com"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "awscdk/StaticSite/StaticSiteBucket/Resource"
      }
    },
    "StaticSiteStaticSiteBucketPolicyC8E62485": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "StaticSiteStaticSiteBucket442CE34F"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "StaticSiteStaticSiteBucket442CE34F",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/StaticSite/StaticSiteBucket/Policy/Resource"
      }
    },
    "StaticSiteCloudFrontDistributionCFDistributionA70E78CD": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "jamescaffey.com",
            "*.jamescaffey.com"
          ],
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            },
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "StaticSiteStaticSiteBucket442CE34F",
                  "RegionalDomainName"
                ]
              },
              "Id": "origin1",
              "S3OriginConfig": {}
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "SiteCert6025247C"
            },
            "SslSupportMethod": "sni-only"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/StaticSite/CloudFrontDistribution/CFDistribution"
      }
    },
    "StaticSiteAliasRecord4F27A661": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "*.jamescaffey.com.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "StaticSiteCloudFrontDistributionCFDistributionA70E78CD",
              "DomainName"
            ]
          },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneId": "Z1EJVU8DMBV0XG"
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/StaticSite/AliasRecord/Resource"
      }
    },
    "StaticSiteAliasRecord1B2F1F710": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "jamescaffey.com.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "StaticSiteCloudFrontDistributionCFDistributionA70E78CD",
              "DomainName"
            ]
          },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneId": "Z1EJVU8DMBV0XG"
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/StaticSite/AliasRecord1/Resource"
      }
    },
    "ElasticContainerRepo2908E7AA": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": "jamescaffey.com/backend"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "awscdk/ElasticContainerRepo/Resource"
      }
    },
    "VpcC3027511": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/Resource"
      }
    },
    "VpcPublicSubnet1Subnet8E8DEDC0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet1/Subnet"
      }
    },
    "VpcPublicSubnet1RouteTable431DD755": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "VpcPublicSubnet1RouteTableAssociationBBCB7AA1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable431DD755"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet8E8DEDC0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet1DefaultRoute0F5C6C43": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable431DD755"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB"
        }
      },
      "DependsOn": [
        "VpcVPCGW42EC8516"
      ],
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "VpcPublicSubnet2SubnetA811849C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet2/Subnet"
      }
    },
    "VpcPublicSubnet2RouteTable77FB35FC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "VpcPublicSubnet2RouteTableAssociation3AFE92E6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable77FB35FC"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2SubnetA811849C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet2DefaultRouteD629179A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable77FB35FC"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB"
        }
      },
      "DependsOn": [
        "VpcVPCGW42EC8516"
      ],
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "VpcIsolatedSubnet1SubnetDC3C6AF8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/IsolatedSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IsolatedSubnet1/Subnet"
      }
    },
    "VpcIsolatedSubnet1RouteTableF057227C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/IsolatedSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IsolatedSubnet1/RouteTable"
      }
    },
    "VpcIsolatedSubnet1RouteTableAssociation0FC379C3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet1RouteTableF057227C"
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet1SubnetDC3C6AF8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IsolatedSubnet1/RouteTableAssociation"
      }
    },
    "VpcIsolatedSubnet2SubnetB479B99C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/IsolatedSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IsolatedSubnet2/Subnet"
      }
    },
    "VpcIsolatedSubnet2RouteTableBAB510EF": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc/IsolatedSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IsolatedSubnet2/RouteTable"
      }
    },
    "VpcIsolatedSubnet2RouteTableAssociation8E8989F5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet2RouteTableBAB510EF"
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet2SubnetB479B99C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IsolatedSubnet2/RouteTableAssociation"
      }
    },
    "VpcIGW488B0FEB": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "awscdk/Vpc/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/IGW"
      }
    },
    "VpcVPCGW42EC8516": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VpcC3027511"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGW488B0FEB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/Vpc/Vpc/VPCGW"
      }
    },
    "ApplicationLoadBalancerALBE88818A8": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ApplicationLoadBalancerALBSecurityGroup0D676F12",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet8E8DEDC0"
          },
          {
            "Ref": "VpcPublicSubnet2SubnetA811849C"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute0F5C6C43",
        "VpcPublicSubnet2DefaultRouteD629179A"
      ],
      "Metadata": {
        "aws:cdk:path": "awscdk/ApplicationLoadBalancer/ALB/Resource"
      }
    },
    "ApplicationLoadBalancerALBSecurityGroup0D676F12": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB awscdkApplicationLoadBalancerALB81FD6B77",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Internet access ALB 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Internet access ALB 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "VpcC3027511"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/ApplicationLoadBalancer/ALB/SecurityGroup/Resource"
      }
    },
    "ApplicationLoadBalancerRedirectListener8FEAF603": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Host": "#{host}",
              "Path": "/#{path}",
              "Port": "443",
              "Protocol": "HTTPS",
              "Query": "#{query}",
              "StatusCode": "HTTP_301"
            },
            "Type": "redirect"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ApplicationLoadBalancerALBE88818A8"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/ApplicationLoadBalancer/RedirectListener"
      }
    },
    "ApplicationLoadBalancerDefaultTargetGroupC3F373E8": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "VpcId": {
          "Ref": "VpcC3027511"
        }
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/ApplicationLoadBalancer/DefaultTargetGroup"
      }
    },
    "ApplicationLoadBalancerHttpsListenerDACB26E9": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Fn::GetAtt": [
                "ApplicationLoadBalancerDefaultTargetGroupC3F373E8",
                "Arn"
              ]
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ApplicationLoadBalancerALBE88818A8"
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "SiteCert6025247C"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "awscdk/ApplicationLoadBalancer/HttpsListener"
      }
    }
  }
}