Resources:
  SiteCert6025247C:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: dev.mysite.com
      DomainValidationOptions:
        - DomainName: dev.mysite.com
          ValidationDomain: mysite.com
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      ValidationMethod: DNS
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/SiteCert/Resource
  VpcC3027511:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/Resource
  VpcPublicSubnet1Subnet8E8DEDC0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: VpcC3027511
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable431DD755:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcC3027511
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociationBBCB7AA1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable431DD755
      SubnetId:
        Ref: VpcPublicSubnet1Subnet8E8DEDC0
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute0F5C6C43:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable431DD755
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGW488B0FEB
    DependsOn:
      - VpcVPCGW42EC8516
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet2SubnetA811849C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VpcC3027511
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable77FB35FC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcC3027511
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociation3AFE92E6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable77FB35FC
      SubnetId:
        Ref: VpcPublicSubnet2SubnetA811849C
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRouteD629179A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable77FB35FC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGW488B0FEB
    DependsOn:
      - VpcVPCGW42EC8516
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/PublicSubnet2/DefaultRoute
  VpcIsolatedSubnet1SubnetDC3C6AF8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: VpcC3027511
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet1
        - Key: aws-cdk:subnet-name
          Value: Isolated
        - Key: aws-cdk:subnet-type
          Value: Isolated
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet1/Subnet
  VpcIsolatedSubnet1RouteTableF057227C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcC3027511
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet1
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet1/RouteTable
  VpcIsolatedSubnet1RouteTableAssociation0FC379C3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcIsolatedSubnet1RouteTableF057227C
      SubnetId:
        Ref: VpcIsolatedSubnet1SubnetDC3C6AF8
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet1/RouteTableAssociation
  VpcIsolatedSubnet2SubnetB479B99C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId:
        Ref: VpcC3027511
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet2
        - Key: aws-cdk:subnet-name
          Value: Isolated
        - Key: aws-cdk:subnet-type
          Value: Isolated
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet2/Subnet
  VpcIsolatedSubnet2RouteTableBAB510EF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcC3027511
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet2
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet2/RouteTable
  VpcIsolatedSubnet2RouteTableAssociation8E8989F5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcIsolatedSubnet2RouteTableBAB510EF
      SubnetId:
        Ref: VpcIsolatedSubnet2SubnetB479B99C
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IsolatedSubnet2/RouteTableAssociation
  VpcIGW488B0FEB:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: StackName
          Value: dev-mysite-com
        - Key: Name
          Value: dev-mysite-com-stack/Vpc/Vpc
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/IGW
  VpcVPCGW42EC8516:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VpcC3027511
      InternetGatewayId:
        Ref: VpcIGW488B0FEB
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Vpc/Vpc/VPCGW
  ApplicationLoadBalancerALBE88818A8:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ApplicationLoadBalancerALBSecurityGroup0D676F12
            - GroupId
      Subnets:
        - Ref: VpcPublicSubnet1Subnet8E8DEDC0
        - Ref: VpcPublicSubnet2SubnetA811849C
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      Type: application
    DependsOn:
      - VpcPublicSubnet1DefaultRoute0F5C6C43
      - VpcPublicSubnet2DefaultRouteD629179A
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/Resource
  ApplicationLoadBalancerALBSecurityGroup0D676F12:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB devmysitecomstackApplicationLoadBalancerALB35990729
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Internet access ALB 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Internet access ALB 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      VpcId:
        Ref: VpcC3027511
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/SecurityGroup/Resource
  ApplicationLoadBalancerALBSecurityGrouptodevmysitecomstackBackendBackendSecurityGroup987E976C8000947E9AB3:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ApplicationLoadBalancerALBSecurityGroup0D676F12
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - VpcC3027511
          - DefaultSecurityGroup
      FromPort: 8000
      ToPort: 8000
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/SecurityGroup/to devmysitecomstackBackendBackendSecurityGroup987E976C:8000
  ApplicationLoadBalancerALBALBListener3A5A512C:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ApplicationLoadBalancerDefaultTargetGroupF1B3D7D1
          Type: forward
      LoadBalancerArn:
        Ref: ApplicationLoadBalancerALBE88818A8
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/ALBListener/Resource
  ApplicationLoadBalancerALBHTTPSListenerE47034B1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ApplicationLoadBalancerDefaultTargetGroupF1B3D7D1
          Type: forward
      LoadBalancerArn:
        Ref: ApplicationLoadBalancerALBE88818A8
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn:
            Ref: SiteCert6025247C
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/HTTPSListener/Resource
  ApplicationLoadBalancerALBHTTPSListenerBackendTargetGroupEFEFD916:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /api/hello-world
      Matcher:
        HttpCode: 200-299
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      TargetType: ip
      VpcId:
        Ref: VpcC3027511
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/HTTPSListener/BackendTargetGroup/Resource
  ApplicationLoadBalancerALBHTTPSListenerBackendTargetRule6CC8AE94:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: ApplicationLoadBalancerALBHTTPSListenerBackendTargetGroupEFEFD916
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - "*"
      ListenerArn:
        Ref: ApplicationLoadBalancerALBHTTPSListenerE47034B1
      Priority: 1
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/ALB/HTTPSListener/BackendTargetRule/Resource
  ApplicationLoadBalancerDefaultTargetGroupF1B3D7D1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      VpcId:
        Ref: VpcC3027511
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ApplicationLoadBalancer/DefaultTargetGroup/Resource
  StaticSiteBucket6BF500B9:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: dev-mysite-com-frontend
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/StaticSiteBucket/StaticSiteBucket/Resource
  StaticSiteBucketPolicy543699F0:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: StaticSiteBucket6BF500B9
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - StaticSiteBucket6BF500B9
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/StaticSiteBucket/StaticSiteBucket/Policy/Resource
  BackendAssetsAssetsBucket62473847:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-mysite-com-assets
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendAssets/AssetsBucket/Resource
  BackendAssetsAssetsBucketPolicyE8C83357:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: BackendAssetsAssetsBucket62473847
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - BackendAssetsAssetsBucket62473847
                      - Arn
                  - /static/*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendAssets/AssetsBucket/Policy/Resource
  StaticSiteCloudFrontDistributionCFDistributionA70E78CD:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - dev.mysite.com
        CacheBehaviors:
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              Headers:
                - "*"
              QueryString: true
            PathPattern: /api/*
            TargetOriginId: origin1
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              Headers:
                - "*"
              QueryString: true
            PathPattern: /admin/*
            TargetOriginId: origin1
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              Headers:
                - "*"
              QueryString: true
            PathPattern: /flower/*
            TargetOriginId: origin1
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              QueryString: true
            PathPattern: /static/*
            TargetOriginId: origin3
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              QueryString: true
            PathPattern: /media/*
            TargetOriginId: origin3
            ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin2
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: match-viewer
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::GetAtt:
                - ApplicationLoadBalancerALBE88818A8
                - DNSName
            Id: origin1
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: http-only
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::Join:
                - ""
                - - Ref: StaticSiteBucket6BF500B9
                  - .s3-website-us-east-1.amazonaws.com
            Id: origin2
          - DomainName:
              Fn::GetAtt:
                - BackendAssetsAssetsBucket62473847
                - RegionalDomainName
            Id: origin3
            S3OriginConfig: {}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Ref: SiteCert6025247C
          SslSupportMethod: sni-only
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/StaticSite/CloudFrontDistribution/CFDistribution
  StaticSiteAliasRecord4F27A661:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: dev.mysite.com.
      Type: A
      AliasTarget:
        DNSName:
          Fn::GetAtt:
            - StaticSiteCloudFrontDistributionCFDistributionA70E78CD
            - DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: ABC123
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/StaticSite/AliasRecord/Resource
  EcsEcsCluster51C39CA0:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: dev-mysite-com-cluster
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Ecs/EcsCluster/Resource
  RdsDBClusterDBSecret28397CCA:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        IncludeSpace: false
        SecretStringTemplate: '{"username": "postgres"}'
      Name: dev-mysite-com-db-secret
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/RdsDBCluster/DBSecret/Resource
  RdsDBClusterDBSecretArn023C20B8:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value:
        Ref: RdsDBClusterDBSecret28397CCA
      Name: dev-mysite-com-secret-arn
      Tags:
        StackName: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/RdsDBCluster/DBSecretArn/Resource
  RdsDBClusterDBSecurityGroup83AB5EDA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DBSecurityGroup
      SecurityGroupIngress:
        - FromPort: 5432
          IpProtocol: tcp
          SourceSecurityGroupId:
            Fn::GetAtt:
              - VpcC3027511
              - DefaultSecurityGroup
          ToPort: 5432
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      VpcId:
        Ref: VpcC3027511
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/RdsDBCluster/DBSecurityGroup
  RdsDBClusterCfnDBSubnetGroup38D3A78B:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: dev-mysite-com-db-subnet-group
      SubnetIds:
        - Ref: VpcIsolatedSubnet1SubnetDC3C6AF8
        - Ref: VpcIsolatedSubnet2SubnetB479B99C
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/RdsDBCluster/CfnDBSubnetGroup
  RdsDBCluster25564148:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      DBSubnetGroupName:
        Ref: RdsDBClusterCfnDBSubnetGroup38D3A78B
      EnableHttpEndpoint: true
      EngineMode: serverless
      EngineVersion: "10.7"
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RdsDBClusterDBSecret28397CCA
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RdsDBClusterDBSecret28397CCA
            - :SecretString:password::}}
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - RdsDBClusterDBSecurityGroup83AB5EDA
            - GroupId
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/RdsDBCluster/DBCluster
  ElastiCacheRedisElastiCacheSecurityGroupA36895A6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ElastiCacheSecurityGroup
      SecurityGroupIngress:
        - FromPort: 6379
          IpProtocol: tcp
          SourceSecurityGroupId:
            Fn::GetAtt:
              - VpcC3027511
              - DefaultSecurityGroup
          ToPort: 6379
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      VpcId:
        Ref: VpcC3027511
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ElastiCacheRedis/ElastiCacheSecurityGroup
  ElastiCacheRedisCfnSubnetGroup403949FE:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: The subnet group for ElastiCache
      SubnetIds:
        - Ref: VpcIsolatedSubnet1SubnetDC3C6AF8
        - Ref: VpcIsolatedSubnet2SubnetB479B99C
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ElastiCacheRedis/CfnSubnetGroup
  ElastiCacheRedisElastiCacheClusterRedis25390D9F:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.t2.micro
      Engine: redis
      NumCacheNodes: 1
      CacheSubnetGroupName:
        Ref: ElastiCacheRedisCfnSubnetGroup403949FE
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - ElastiCacheRedisElastiCacheSecurityGroupA36895A6
            - GroupId
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/ElastiCacheRedis/ElastiCacheClusterRedis
  VariablesDjangoSecretKeyE4FA41EE:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        IncludeSpace: false
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Variables/DjangoSecretKey/Resource
  BackendBackendTaskTaskRoleD7BBECAE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendTask/TaskRole/Resource
  BackendBackendTaskTaskRoleDefaultPolicy35F40EEC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BackendAssetsAssetsBucket62473847
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BackendAssetsAssetsBucket62473847
                        - Arn
                    - /*
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: VariablesDjangoSecretKeyE4FA41EE
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RdsDBClusterDBSecret28397CCA
        Version: "2012-10-17"
      PolicyName: BackendBackendTaskTaskRoleDefaultPolicy35F40EEC
      Roles:
        - Ref: BackendBackendTaskTaskRoleD7BBECAE
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendTask/TaskRole/DefaultPolicy/Resource
  BackendBackendTask22B2DD1D:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - /start_prod.sh
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: backend.settings.production
            - Name: DEBUG
              Value: ""
            - Name: AWS_STORAGE_BUCKET_NAME
              Value:
                Ref: BackendAssetsAssetsBucket62473847
            - Name: POSTGRES_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - RdsDBCluster25564148
                  - Endpoint.Address
            - Name: POSTGRES_PASSWORD
              Value:
                Fn::Join:
                  - ""
                  - - "{{resolve:secretsmanager:"
                    - Ref: RdsDBClusterDBSecret28397CCA
                    - :SecretString:password::}}
            - Name: SECRET_KEY
              Value: mysecretkey123
            - Name: REDIS_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - ElastiCacheRedisElastiCacheClusterRedis25390D9F
                  - RedisEndpoint.Address
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.us-east-1.
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:cecf15b2b6427c94fe8347ab93564105a951a8de4a7f7c927ada0374f2a9c97c
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: BackendBackendTaskDjangoBackendLogGroup020EB920
              awslogs-stream-prefix: Backend
              awslogs-region: us-east-1
          Name: DjangoBackend
          PortMappings:
            - ContainerPort: 8000
              Protocol: tcp
          Secrets:
            - Name: DJANGO_SECRET_KEY
              ValueFrom:
                Ref: VariablesDjangoSecretKeyE4FA41EE
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - BackendBackendTaskExecutionRole3B22D4E5
          - Arn
      Family: devmysitecomstackBackendBackendTask23526354
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      TaskRoleArn:
        Fn::GetAtt:
          - BackendBackendTaskTaskRoleD7BBECAE
          - Arn
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendTask/Resource
  BackendBackendTaskDjangoBackendLogGroup020EB920:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendTask/DjangoBackend/LogGroup/Resource
  BackendBackendTaskExecutionRole3B22D4E5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendTask/ExecutionRole/Resource
  BackendBackendTaskExecutionRoleDefaultPolicyDCB452D2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:us-east-1:"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BackendBackendTaskDjangoBackendLogGroup020EB920
                - Arn
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: VariablesDjangoSecretKeyE4FA41EE
        Version: "2012-10-17"
      PolicyName: BackendBackendTaskExecutionRoleDefaultPolicyDCB452D2
      Roles:
        - Ref: BackendBackendTaskExecutionRole3B22D4E5
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendTask/ExecutionRole/DefaultPolicy/Resource
  BackendBackendSecurityGroupfromdevmysitecomstackApplicationLoadBalancerALBSecurityGroup41CD7D0380003CD57722:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 8000
      GroupId:
        Fn::GetAtt:
          - VpcC3027511
          - DefaultSecurityGroup
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ApplicationLoadBalancerALBSecurityGroup0D676F12
          - GroupId
      ToPort: 8000
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendSecurityGroup/from devmysitecomstackApplicationLoadBalancerALBSecurityGroup41CD7D03:8000
  BackendBackendService9DB18AD9:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: EcsEcsCluster51C39CA0
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: DjangoBackend
          ContainerPort: 8000
          TargetGroupArn:
            Ref: ApplicationLoadBalancerALBHTTPSListenerBackendTargetGroupEFEFD916
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::GetAtt:
                - VpcC3027511
                - DefaultSecurityGroup
          Subnets:
            - Ref: VpcPublicSubnet1Subnet8E8DEDC0
            - Ref: VpcPublicSubnet2SubnetA811849C
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      TaskDefinition:
        Ref: BackendBackendTask22B2DD1D
    DependsOn:
      - ApplicationLoadBalancerALBHTTPSListenerBackendTargetRule6CC8AE94
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/Backend/BackendService/Service
  BackendTasksMigrateTaskTaskRoleAE7059C2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/MigrateTask/TaskRole/Resource
  BackendTasksMigrateTask9BDCB431:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - python3
            - manage.py
            - migrate
            - --no-input
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: backend.settings.production
            - Name: DEBUG
              Value: ""
            - Name: AWS_STORAGE_BUCKET_NAME
              Value:
                Ref: BackendAssetsAssetsBucket62473847
            - Name: POSTGRES_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - RdsDBCluster25564148
                  - Endpoint.Address
            - Name: POSTGRES_PASSWORD
              Value:
                Fn::Join:
                  - ""
                  - - "{{resolve:secretsmanager:"
                    - Ref: RdsDBClusterDBSecret28397CCA
                    - :SecretString:password::}}
            - Name: SECRET_KEY
              Value: mysecretkey123
            - Name: REDIS_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - ElastiCacheRedisElastiCacheClusterRedis25390D9F
                  - RedisEndpoint.Address
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.us-east-1.
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:cecf15b2b6427c94fe8347ab93564105a951a8de4a7f7c927ada0374f2a9c97c
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: BackendTasksMigrateTaskMigrateCommandLogGroup94452D93
              awslogs-stream-prefix: MigrateCommand
              awslogs-region: us-east-1
          Name: MigrateCommand
          Secrets:
            - Name: DJANGO_SECRET_KEY
              ValueFrom:
                Ref: VariablesDjangoSecretKeyE4FA41EE
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - BackendTasksMigrateTaskExecutionRole44C9D955
          - Arn
      Family: dev-mysite-com-migrate
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      TaskRoleArn:
        Fn::GetAtt:
          - BackendTasksMigrateTaskTaskRoleAE7059C2
          - Arn
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/MigrateTask/Resource
  BackendTasksMigrateTaskMigrateCommandLogGroup94452D93:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/MigrateTask/MigrateCommand/LogGroup/Resource
  BackendTasksMigrateTaskExecutionRole44C9D955:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/MigrateTask/ExecutionRole/Resource
  BackendTasksMigrateTaskExecutionRoleDefaultPolicy033E9FC3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:us-east-1:"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BackendTasksMigrateTaskMigrateCommandLogGroup94452D93
                - Arn
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: VariablesDjangoSecretKeyE4FA41EE
        Version: "2012-10-17"
      PolicyName: BackendTasksMigrateTaskExecutionRoleDefaultPolicy033E9FC3
      Roles:
        - Ref: BackendTasksMigrateTaskExecutionRole44C9D955
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/MigrateTask/ExecutionRole/DefaultPolicy/Resource
  BackendTasksCollecstaticTaskTaskRole68FA2F7B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CollecstaticTask/TaskRole/Resource
  BackendTasksCollecstaticTaskTaskRoleDefaultPolicyDA990EDC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BackendAssetsAssetsBucket62473847
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BackendAssetsAssetsBucket62473847
                        - Arn
                    - /*
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: VariablesDjangoSecretKeyE4FA41EE
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RdsDBClusterDBSecret28397CCA
        Version: "2012-10-17"
      PolicyName: BackendTasksCollecstaticTaskTaskRoleDefaultPolicyDA990EDC
      Roles:
        - Ref: BackendTasksCollecstaticTaskTaskRole68FA2F7B
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CollecstaticTask/TaskRole/DefaultPolicy/Resource
  BackendTasksCollecstaticTask92B4EE6A:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - python3
            - manage.py
            - collectstatic
            - --no-input
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: backend.settings.production
            - Name: DEBUG
              Value: ""
            - Name: AWS_STORAGE_BUCKET_NAME
              Value:
                Ref: BackendAssetsAssetsBucket62473847
            - Name: POSTGRES_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - RdsDBCluster25564148
                  - Endpoint.Address
            - Name: POSTGRES_PASSWORD
              Value:
                Fn::Join:
                  - ""
                  - - "{{resolve:secretsmanager:"
                    - Ref: RdsDBClusterDBSecret28397CCA
                    - :SecretString:password::}}
            - Name: SECRET_KEY
              Value: mysecretkey123
            - Name: REDIS_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - ElastiCacheRedisElastiCacheClusterRedis25390D9F
                  - RedisEndpoint.Address
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.us-east-1.
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:cecf15b2b6427c94fe8347ab93564105a951a8de4a7f7c927ada0374f2a9c97c
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: BackendTasksCollecstaticTaskCollecstaticCommandLogGroupE150F561
              awslogs-stream-prefix: CollectstaticCommand
              awslogs-region: us-east-1
          Name: CollecstaticCommand
          Secrets:
            - Name: DJANGO_SECRET_KEY
              ValueFrom:
                Ref: VariablesDjangoSecretKeyE4FA41EE
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - BackendTasksCollecstaticTaskExecutionRole64C8813C
          - Arn
      Family: dev-mysite-com-collectstatic
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      TaskRoleArn:
        Fn::GetAtt:
          - BackendTasksCollecstaticTaskTaskRole68FA2F7B
          - Arn
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CollecstaticTask/Resource
  BackendTasksCollecstaticTaskCollecstaticCommandLogGroupE150F561:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CollecstaticTask/CollecstaticCommand/LogGroup/Resource
  BackendTasksCollecstaticTaskExecutionRole64C8813C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CollecstaticTask/ExecutionRole/Resource
  BackendTasksCollecstaticTaskExecutionRoleDefaultPolicyF6ED755C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:us-east-1:"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BackendTasksCollecstaticTaskCollecstaticCommandLogGroupE150F561
                - Arn
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: VariablesDjangoSecretKeyE4FA41EE
        Version: "2012-10-17"
      PolicyName: BackendTasksCollecstaticTaskExecutionRoleDefaultPolicyF6ED755C
      Roles:
        - Ref: BackendTasksCollecstaticTaskExecutionRole64C8813C
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CollecstaticTask/ExecutionRole/DefaultPolicy/Resource
  BackendTasksCreateSuperuserTaskTaskRoleD91E1780:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CreateSuperuserTask/TaskRole/Resource
  BackendTasksCreateSuperuserTaskTaskRoleDefaultPolicyF80ECD9D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BackendAssetsAssetsBucket62473847
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BackendAssetsAssetsBucket62473847
                        - Arn
                    - /*
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: VariablesDjangoSecretKeyE4FA41EE
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RdsDBClusterDBSecret28397CCA
        Version: "2012-10-17"
      PolicyName: BackendTasksCreateSuperuserTaskTaskRoleDefaultPolicyF80ECD9D
      Roles:
        - Ref: BackendTasksCreateSuperuserTaskTaskRoleD91E1780
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CreateSuperuserTask/TaskRole/DefaultPolicy/Resource
  BackendTasksCreateSuperuserTask71A5D516:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - python3
            - manage.py
            - create_default_user
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: backend.settings.production
            - Name: DEBUG
              Value: ""
            - Name: AWS_STORAGE_BUCKET_NAME
              Value:
                Ref: BackendAssetsAssetsBucket62473847
            - Name: POSTGRES_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - RdsDBCluster25564148
                  - Endpoint.Address
            - Name: POSTGRES_PASSWORD
              Value:
                Fn::Join:
                  - ""
                  - - "{{resolve:secretsmanager:"
                    - Ref: RdsDBClusterDBSecret28397CCA
                    - :SecretString:password::}}
            - Name: SECRET_KEY
              Value: mysecretkey123
            - Name: REDIS_SERVICE_HOST
              Value:
                Fn::GetAtt:
                  - ElastiCacheRedisElastiCacheClusterRedis25390D9F
                  - RedisEndpoint.Address
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.us-east-1.
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:cecf15b2b6427c94fe8347ab93564105a951a8de4a7f7c927ada0374f2a9c97c
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: BackendTasksCreateSuperuserTaskCreateSuperuserCommandLogGroup6BB56070
              awslogs-stream-prefix: CreateSuperuserCommand
              awslogs-region: us-east-1
          Name: CreateSuperuserCommand
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - BackendTasksCreateSuperuserTaskExecutionRoleD1618D80
          - Arn
      Family: dev-mysite-com-create-superuser
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: StackName
          Value: dev-mysite-com
      TaskRoleArn:
        Fn::GetAtt:
          - BackendTasksCreateSuperuserTaskTaskRoleD91E1780
          - Arn
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CreateSuperuserTask/Resource
  BackendTasksCreateSuperuserTaskCreateSuperuserCommandLogGroup6BB56070:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CreateSuperuserTask/CreateSuperuserCommand/LogGroup/Resource
  BackendTasksCreateSuperuserTaskExecutionRoleD1618D80:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: StackName
          Value: dev-mysite-com
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CreateSuperuserTask/ExecutionRole/Resource
  BackendTasksCreateSuperuserTaskExecutionRoleDefaultPolicy6E375175:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:us-east-1:"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BackendTasksCreateSuperuserTaskCreateSuperuserCommandLogGroup6BB56070
                - Arn
        Version: "2012-10-17"
      PolicyName: BackendTasksCreateSuperuserTaskExecutionRoleDefaultPolicy6E375175
      Roles:
        - Ref: BackendTasksCreateSuperuserTaskExecutionRoleD1618D80
    Metadata:
      aws:cdk:path: dev-mysite-com-stack/BackendTasks/CreateSuperuserTask/ExecutionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.38.0,@aws-cdk/assets=1.38.0,@aws-cdk/aws-apigateway=1.38.0,@aws-cdk/aws-applicationautoscaling=1.38.0,@aws-cdk/aws-autoscaling=1.38.0,@aws-cdk/aws-autoscaling-common=1.38.0,@aws-cdk/aws-autoscaling-hooktargets=1.38.0,@aws-cdk/aws-batch=1.38.0,@aws-cdk/aws-certificatemanager=1.38.0,@aws-cdk/aws-cloudformation=1.38.0,@aws-cdk/aws-cloudfront=1.38.0,@aws-cdk/aws-cloudwatch=1.38.0,@aws-cdk/aws-codebuild=1.38.0,@aws-cdk/aws-codecommit=1.38.0,@aws-cdk/aws-codepipeline=1.38.0,@aws-cdk/aws-cognito=1.38.0,@aws-cdk/aws-ec2=1.38.0,@aws-cdk/aws-ecr=1.38.0,@aws-cdk/aws-ecr-assets=1.38.0,@aws-cdk/aws-ecs=1.38.0,@aws-cdk/aws-ecs-patterns=1.38.0,@aws-cdk/aws-elasticache=1.38.0,@aws-cdk/aws-elasticloadbalancing=1.38.0,@aws-cdk/aws-elasticloadbalancingv2=1.38.0,@aws-cdk/aws-events=1.38.0,@aws-cdk/aws-events-targets=1.38.0,@aws-cdk/aws-iam=1.38.0,@aws-cdk/aws-kms=1.38.0,@aws-cdk/aws-lambda=1.38.0,@aws-cdk/aws-logs=1.38.0,@aws-cdk/aws-rds=1.38.0,@aws-cdk/aws-route53=1.38.0,@aws-cdk/aws-route53-targets=1.38.0,@aws-cdk/aws-s3=1.38.0,@aws-cdk/aws-s3-assets=1.38.0,@aws-cdk/aws-s3-deployment=1.38.0,@aws-cdk/aws-sam=1.38.0,@aws-cdk/aws-secretsmanager=1.38.0,@aws-cdk/aws-servicediscovery=1.38.0,@aws-cdk/aws-sns=1.38.0,@aws-cdk/aws-sns-subscriptions=1.38.0,@aws-cdk/aws-sqs=1.38.0,@aws-cdk/aws-ssm=1.38.0,@aws-cdk/aws-stepfunctions=1.38.0,@aws-cdk/cloud-assembly-schema=1.38.0,@aws-cdk/core=1.38.0,@aws-cdk/custom-resources=1.38.0,@aws-cdk/cx-api=1.38.0,@aws-cdk/region-info=1.38.0,jsii-runtime=Python/3.6.8

