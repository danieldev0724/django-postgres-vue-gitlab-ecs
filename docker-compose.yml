version: '3.7'

services:

  db:
    container_name: db
    image: postgres
    networks:
      - main
    volumes:
      - pg-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    container_name: redis
    networks:
      - main

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/dev/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
      - flower
    volumes:
      - ./nginx/dev/dev.conf:/etc/nginx/nginx.conf:ro
      - django-static:/usr/src/app/static
    networks:
      - main

  backend:
    container_name: backend
    build: ./backend
    command: /code/start_dev.sh
    volumes:
      - ./backend:/code
      - django-static:/code/static
    ports:
      - "8000:8000"
    networks:
      - main
    environment:
      - DEBUG=True
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app/
      - '/app/node_modules'
    ports:
      - "8080:8080"
    networks:
      - main
    depends_on:
      - backend
      - db
    environment:
      - NODE_ENV=development
      - VUE_APP_API_BASE_URL=http://localhost

  celery:
    build: ./backend
    container_name: celery
    command: bash -c 'python3 manage.py watch_celery'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    networks:
      - main
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  beat:
    build: ./backend
    container_name: beat
    command: bash -c 'python3 manage.py watch_celery_beat'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    networks:
      - main
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  flower:
    image: mher/flower
    container_name: flower
    command: flower --url_prefix=flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    networks:
      - main
    depends_on:
      - celery
      - redis
      - beat

volumes:
  pg-data:
  django-static:
  redis-data:

networks:
  main:
    driver: bridge
