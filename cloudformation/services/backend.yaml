Description: >
  This service runs the Django webserver

Parameters:

  ImageUrl:
    Type: String
    Description: ECR Image

  GitSHA:
    Type: String
    Description: The Git SHA

  StackName:
    Type: String
    Description: The name of the stack

  EnvironmentName:
    Type: String
    Description: An environemnt name to namespace cluster resources (e.g. qa, staging, production)

  AppUrl:
    Type: "String"
    Description: "The URL for our app (e.g. mydomain.com)"
    AllowedPattern: "[a-z0-9._-]+"

  DesiredCount:
    Description: How many instances of this task should we run across our cluster?
    Type: Number
    Default: 2

  Listener:
    Description: The Application Load Balancer listener to register with
    Type: String

  ServiceRole:
    Description: An IAM Role that grants the service access to register/unregister with the Application Load Balancer (ALB).
    Type: String

  TaskRole:
    Description: An IAM Role that allows tasks to access SSM parameter store
    Type: String

  DjangoSecretKey:
    Description: The Secret Key for backend, celery and beat containers
    Type: String
    NoEcho: true

Resources:
  BackendService:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster:
        Fn::ImportValue:
          !Sub ${StackName}:ECSCluster
      Role: !Ref ServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: "backend"
          ContainerPort: 8000
          TargetGroupArn: !Ref BackendTargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: backend
      ExecutionRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: backend
          Essential: true
          Image: !Ref ImageUrl
          MemoryReservation: 128
          Command:
            - '/start_prod.sh'
          Secrets:
            - Name: MY_PARAM
              ValueFrom: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/my-param"
          Environment:
            - Name: GIT_SHA
              Value: !Ref GitSHA
            - Name: SECRET_KEY
              Value: !Ref DjangoSecretKey
            - Name: APP_URL
              Value: !Ref AppUrl
            - Name: DEBUG
              Value: ''
            - Name: POSTGRES_NAME
              Value: postgres
            - Name: POSTGRES_USERNAME
              Value: postgres
            - Name: POSTGRES_PASSWORD
              Value: postgres
            - Name: POSTGRES_SERVICE_HOST
              Value:
                Fn::ImportValue:
                  !Sub ${StackName}:RDSHost
            - Name: REDIS_SERVICE_HOST
              Value:
                Fn::ImportValue:
                  !Sub ${StackName}:ElastiCacheHost
            - Name: AWS_STORAGE_BUCKET_NAME
              Value: !Sub "${StackName}-assets"
            - Name: STACK_NAME
              Value: !Ref StackName
            - Name: DJANGO_SETTINGS_MODULE
              Value: 'backend.settings.production'
          PortMappings:
            - ContainerPort: 8000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref BackendCloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region

  BackendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub ${StackName}:VpcId
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 300
      HealthCheckPath: /api/hello-world
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref Listener
      Priority: 3
      Conditions:
        - Field: path-pattern
          Values:
            - "*"
      Actions:
        - TargetGroupArn: !Ref BackendTargetGroup
          Type: forward

  BackendCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 7
