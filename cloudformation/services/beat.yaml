Description: >
  This is an example of a long running ECS service that serves a JSON API of products.

Parameters:

  ImageUrl:
    Type: String
    Description: ECR Image

  StackName:
    Type: String
    Description: The name of the stack

  AppUrl:
    Type: "String"
    Description: "The URL for our app (e.g. mydomain.com)"
    AllowedPattern: "[a-z0-9._-]+"

  DesiredCount:
    Description: How many instances of this task should we run across our cluster?
    Type: Number
    Default: 2

  ServiceRole:
    Description: An IAM Role that grants the service access to register/unregister with the Application Load Balancer (ALB).
    Type: String

  DjangoSecretKey:
    Description: The Secret Key for backend, celery and beat containers
    Type: String
    NoEcho: true

Resources:

  BeatService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue:
          !Sub ${StackName}:ECSCluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref BeatTaskDefinition

  BeatTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: beat
      ContainerDefinitions:
        - Name: beat
          Essential: true
          Image: !Ref ImageUrl
          Memory: 128
          Command:
            - 'celery'
            - 'beat'
            - '-A'
            - 'backend.celery_app:app'
            - '-l'
            - 'info'
          Environment:
            - Name: SECRET_KEY
              Value: !Ref DjangoSecretKey
            - Name: APP_URL
              Value: !Ref AppUrl
            - Name: DEBUG
              Value: ''
            - Name: POSTGRES_NAME
              Value: postgres
            - Name: POSTGRES_USERNAME
              Value: postgres
            - Name: POSTGRES_PASSWORD
              Value: postgres
            - Name: POSTGRES_SERVICE_HOST
              Value:
                Fn::ImportValue:
                  !Sub ${StackName}:RDSHost
            - Name: REDIS_SERVICE_HOST
              Value:
                Fn::ImportValue:
                  !Sub ${StackName}:ElastiCacheHost
            - Name: AWS_STORAGE_BUCKET_NAME
              Value: !Sub "${StackName}-assets"
            - Name: DJANGO_SETTINGS_MODULE
              Value: 'backend.settings.production'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref BeatCloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region

  BeatCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 7
