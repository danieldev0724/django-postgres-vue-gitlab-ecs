stages:
  - test
  - build
  - deploy
  - cloudformation

variables:
  REPOSITORY_URL: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AppUrl}/backend
  ECRBackendRepositoryName: ${AppUrl}/backend
  GitSHA: $CI_COMMIT_SHORT_SHA
  AWSAccessKeyId: $AWS_ACCESS_KEY_ID
  AWSSecretAccessKey: $AWS_SECRET_ACCESS_KEY

.build-and-release-backend:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  only:
    - master
  before_script:
    - cd backend
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - docker build -t $REPOSITORY_URL:latest -f scripts/prod/Dockerfile .
    - docker push $REPOSITORY_URL:latest

.unit:
  image: node:latest
  stage: test
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - npm run lint
    - npm run test:unit
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

.e2e:
  image: cypress/base:10
  stage: test
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - apt install httping
    - npm run serve &
    - while ! httping -qc1 http://localhost:8080/login ; do sleep 1 ; done
    - $(npm bin)/cypress run
  artifacts:
    paths:
      - tests/e2e/videos/
      - tests/e2e/screenshots/
    expire_in: 7 days

.build-frontend:
  image: node:latest
  stage: build
  only:
    - master
  variables:
    VUE_APP_CI_COMMIT_SHORT_SHA: "$CI_COMMIT_SHORT_SHA"
    VUE_APP_CI_JOB_URL: "$CI_JOB_URL"
    VUE_APP_API_BASE_URL: "https://api.${AppUrl}"
  artifacts:
    paths:
      - frontend/dist/
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - npm run build
    - echo "Build Complete"

.deploy-frontend:
  image: python:3.6
  stage: deploy
  only:
    - master
  dependencies:
    - build-frontend
  before_script:
    - cd frontend
    - pip install awscli
    - aws iam get-user
  script:
    - aws s3 sync --delete --exclude index.html --exclude service-worker.js ./dist/ s3://${AppUrl}/
    - aws s3 cp --cache-control 'max-age=0' ./dist/index.html s3://${AppUrl}/
    - aws s3 cp --cache-control 'max-age=0' ./dist/service-worker.js s3://${AppUrl}/

.build-frontend-staging:
  image: node:latest
  stage: build
  only:
    - master
  variables:
    VUE_APP_CI_COMMIT_SHORT_SHA: "$CI_COMMIT_SHORT_SHA"
    VUE_APP_CI_JOB_URL: "$CI_JOB_URL"
    VUE_APP_API_BASE_URL: "https://api.${AppUrl}"
  artifacts:
    paths:
      - frontend/dist/
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - npm run build
    - echo "Build Complete"

.deploy-frontend-staging:
  image: python:3.6
  stage: deploy
  only:
    - master
  dependencies:
    - build-frontend-staging
  before_script:
    - cd frontend
    - pip install awscli
    - aws iam get-user
  environment:
    name: ${StackName}
    url: https://${AppUrl}
  script:
    - aws s3 sync --delete --exclude index.html --exclude service-worker.js ./dist/ s3://${AppUrl}/
    - aws s3 cp --cache-control 'max-age=0' ./dist/index.html s3://${AppUrl}/
    - aws s3 cp --cache-control 'max-age=0' ./dist/service-worker.js s3://${AppUrl}/

.create-stack-staging:
  image: python:3.6
  stage: cloudformation
  variables:
    EnvironmentName: staging
  before_script:
    - pip install awscli
    - ./cloudformation/tests/validate-templates.sh
    - ./cloudformation/scripts/generate_secrets.py
    - aws s3 sync cloudformation/ s3://${AppUrl}-cloudformation/ --delete
  script:
    - |
      aws cloudformation create-stack \
        --stack-name ${StackName} \
        --template-url https://s3.amazonaws.com/${AppUrl}-cloudformation/master.yaml \
        --capabilities=CAPABILITY_NAMED_IAM \
        --parameters file://./parameters.json
  after_script:
    - echo "Finished creating stack"

update-stack-staging:
  image: python:3.6
  stage: cloudformation
  variables:
    EnvironmentName: staging
  only:
    - master
  before_script:
    - pip install awscli
    - ./cloudformation/tests/validate-templates.sh
    - ./cloudformation/scripts/generate_secrets.py
    - aws s3 sync cloudformation/ s3://${AppUrl}-cloudformation/
  script:
    - |
      aws cloudformation update-stack \
        --stack-name ${StackName} \
        --template-url https://s3.amazonaws.com/${AppUrl}-cloudformation/master.yaml \
        --capabilities=CAPABILITY_NAMED_IAM \
        --parameters file://./parameters.json
  after_script:
    - echo "Finished updating stack"
