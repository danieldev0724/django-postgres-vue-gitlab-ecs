stages:
  - test
  - build
  - deploy

build-backend:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    REPOSITORY_URL: 733623710918.dkr.ecr.us-east-1.amazonaws.com/briancaffey.com/backend
  before_script:
    - cd backend
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - docker build -t $REPOSITORY_URL:latest .
    - docker push $REPOSITORY_URL:latest

.unit:
  image: node:latest
  stage: test
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - npm run lint
    - npm run test:unit
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

.e2e:
  image: cypress/base:10
  stage: test
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - apt install httping
    - npm run serve &
    - while ! httping -qc1 http://localhost:8080/login ; do sleep 1 ; done
    - $(npm bin)/cypress run
  artifacts:
    paths:
      - tests/e2e/videos/
      - tests/e2e/screenshots/
    expire_in: 7 days

build-frontend:
  image: node:latest
  stage: build
  only:
    - master
  variables:
    VUE_APP_CI_COMMIT_SHORT_SHA: "$CI_COMMIT_SHORT_SHA"
    VUE_APP_CI_JOB_URL: "$CI_JOB_URL"
  artifacts:
    paths:
      - frontend/dist/
  before_script:
    - cd frontend
    - npm install --progress=false
  script:
    - npm run build
    - echo "Build Complete"

deploy-frontend:
  image: python:3.6
  stage: deploy
  only:
    - master
  dependencies:
    - build-frontend
  before_script:
    - ls frontend
    - ls frontend/dist || echo "nothing in frontend/dist"
    - cd frontend
    - pip install awscli
    - aws iam get-user
  script:
    - aws s3 sync dist/ s3://briancaffey.com/ --delete
    - aws cloudfront create-invalidation --distribution-id $CDN_DISTRIBUTION_ID --paths "/*"
